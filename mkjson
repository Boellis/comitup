#!/usr/bin/python3

import json
import os
import re
from functools import reduce

from distutils.version import LooseVersion
from pkg_resources import parse_version
from collections import defaultdict


def pkgkeyfunc(a):
    (name, ver) = a.split('_')[0:2]
    return(name, (parse_version(ver)))

def pkglatestver(pkglist):
    vers = [x.split('_')[1] for x in pkglist]
    return max(vers, key=lambda x:parse_version(x))

pkgs = defaultdict(lambda: [])
for deb in os.listdir('deb'):
    if 'deb' in deb:
        pkgs[pkgkeyfunc(deb)[0]].append(deb)

latestver={}
latestdebs = []
for pkg in pkgs:
    pkgs[pkg] = sorted(pkgs[pkg], key=pkgkeyfunc)
    latestver = pkglatestver(pkgs[pkg])
    latestdebs.append([x for x in pkgs[pkg] if latestver in x][0])

debs = reduce(lambda x,y: x + y, [pkgs[x] for x in pkgs])

outputjson = {
    'all_pkgs': debs,
    'latest_pkgs': latestdebs,
    'pkg_names': [pkg for pkg in pkgs],
}

with open('pkgs.json', 'w') as outfile:
    json.dump(outputjson, outfile, sort_keys=True, indent=4)
